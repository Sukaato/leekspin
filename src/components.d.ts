/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { LeekButtonType } from "./components/leek-button/button.type";
export namespace Components {
    interface LeekApp {
    }
    interface LeekButton {
        /**
          * type of icon displpayed
         */
        "icon": LeekButtonType;
    }
    interface LeekInputRange {
        "disabled": boolean;
        "max": number;
        "min": number;
        "step": number;
    }
    interface LeekPlayer {
    }
    interface LeekTimer {
        /**
          * Indicate if audio is playing, if true timer can increment
         */
        "playing": boolean;
    }
}
declare global {
    interface HTMLLeekAppElement extends Components.LeekApp, HTMLStencilElement {
    }
    var HTMLLeekAppElement: {
        prototype: HTMLLeekAppElement;
        new (): HTMLLeekAppElement;
    };
    interface HTMLLeekButtonElement extends Components.LeekButton, HTMLStencilElement {
    }
    var HTMLLeekButtonElement: {
        prototype: HTMLLeekButtonElement;
        new (): HTMLLeekButtonElement;
    };
    interface HTMLLeekInputRangeElement extends Components.LeekInputRange, HTMLStencilElement {
    }
    var HTMLLeekInputRangeElement: {
        prototype: HTMLLeekInputRangeElement;
        new (): HTMLLeekInputRangeElement;
    };
    interface HTMLLeekPlayerElement extends Components.LeekPlayer, HTMLStencilElement {
    }
    var HTMLLeekPlayerElement: {
        prototype: HTMLLeekPlayerElement;
        new (): HTMLLeekPlayerElement;
    };
    interface HTMLLeekTimerElement extends Components.LeekTimer, HTMLStencilElement {
    }
    var HTMLLeekTimerElement: {
        prototype: HTMLLeekTimerElement;
        new (): HTMLLeekTimerElement;
    };
    interface HTMLElementTagNameMap {
        "leek-app": HTMLLeekAppElement;
        "leek-button": HTMLLeekButtonElement;
        "leek-input-range": HTMLLeekInputRangeElement;
        "leek-player": HTMLLeekPlayerElement;
        "leek-timer": HTMLLeekTimerElement;
    }
}
declare namespace LocalJSX {
    interface LeekApp {
    }
    interface LeekButton {
        /**
          * type of icon displpayed
         */
        "icon"?: LeekButtonType;
    }
    interface LeekInputRange {
        "disabled"?: boolean;
        "max"?: number;
        "min"?: number;
        "onUpdateVolume"?: (event: CustomEvent<number>) => void;
        "step"?: number;
    }
    interface LeekPlayer {
        /**
          * Event is emitted when the button is pressed
         */
        "onToggleState"?: (event: CustomEvent<boolean>) => void;
    }
    interface LeekTimer {
        /**
          * Indicate if audio is playing, if true timer can increment
         */
        "playing"?: boolean;
    }
    interface IntrinsicElements {
        "leek-app": LeekApp;
        "leek-button": LeekButton;
        "leek-input-range": LeekInputRange;
        "leek-player": LeekPlayer;
        "leek-timer": LeekTimer;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "leek-app": LocalJSX.LeekApp & JSXBase.HTMLAttributes<HTMLLeekAppElement>;
            "leek-button": LocalJSX.LeekButton & JSXBase.HTMLAttributes<HTMLLeekButtonElement>;
            "leek-input-range": LocalJSX.LeekInputRange & JSXBase.HTMLAttributes<HTMLLeekInputRangeElement>;
            "leek-player": LocalJSX.LeekPlayer & JSXBase.HTMLAttributes<HTMLLeekPlayerElement>;
            "leek-timer": LocalJSX.LeekTimer & JSXBase.HTMLAttributes<HTMLLeekTimerElement>;
        }
    }
}
